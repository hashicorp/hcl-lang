// Code generated by "stringer -type=SemanticTokenType -output=semantic_token_type_string.go"; DO NOT EDIT.

package lang

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenNil-0]
	_ = x[TokenAttrName-1]
	_ = x[TokenBlockType-2]
	_ = x[TokenBlockLabel-3]
}

const _SemanticTokenType_name = "TokenNilTokenAttrNameTokenBlockTypeTokenBlockLabel"

var _SemanticTokenType_index = [...]uint8{0, 8, 21, 35, 50}

func (i SemanticTokenType) String() string {
	if i >= SemanticTokenType(len(_SemanticTokenType_index)-1) {
		return "SemanticTokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SemanticTokenType_name[_SemanticTokenType_index[i]:_SemanticTokenType_index[i+1]]
}
